{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"10O_OptFSyHMZBIsBDj-oQyPT7zILQBCs","authorship_tag":"ABX9TyMaSOysuPliMcHXg7xFjPgo"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Exploratory Data Analysis**"],"metadata":{"id":"chpTFvkFbvMk"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"Z-9gHJHsLLCi","executionInfo":{"status":"ok","timestamp":1737099397676,"user_tz":-330,"elapsed":1168,"user":{"displayName":"anurag kumar","userId":"07772660597975520108"}}},"outputs":[],"source":["import numpy as np\n","\n","import pandas as pd"]},{"cell_type":"code","source":["# importing the dataset\n","df = pd.read_csv('/content/drive/MyDrive/PRODUCT.csv')"],"metadata":{"id":"B8w7qYAbaO6K","executionInfo":{"status":"ok","timestamp":1737106123905,"user_tz":-330,"elapsed":473,"user":{"displayName":"anurag kumar","userId":"07772660597975520108"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["df.head() #Display the first 5 rows of the Dataset."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"mNubRh04dJVO","executionInfo":{"status":"ok","timestamp":1737106127547,"user_tz":-330,"elapsed":984,"user":{"displayName":"anurag kumar","userId":"07772660597975520108"}},"outputId":"b666a8af-999f-4eee-e9ed-d87721c4c77b"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   User_ID Product_ID Gender   Age  Occupation City_Category Stay_In_Country  \\\n","0  1000001  P00069042      F  0-17          10             A               2   \n","1  1000001  P00248474      F  0-17          10             A               2   \n","2  1000001  P00383922      F  0-17          10             A               2   \n","3  1000001  P00028392      F  0-17          10             A               2   \n","4  1000002  P02929822      M   55+          10             A               2   \n","\n","   Marital_Status  Product_Category1  Product_Category2  Product_Category3  \\\n","0               0                  3                NaN                NaN   \n","1               0                  1                6.0               14.0   \n","2               0                 12                NaN                NaN   \n","3               0                 12               14.0                NaN   \n","4               0                  8                NaN                NaN   \n","\n","   Purchase  New  \n","0      8370  NaN  \n","1     15200  NaN  \n","2      1424  NaN  \n","3      1057  NaN  \n","4      7696  NaN  "],"text/html":["\n","  <div id=\"df-a4ac063f-d804-49ad-87c0-bfc7aafc45f5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User_ID</th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>City_Category</th>\n","      <th>Stay_In_Country</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category1</th>\n","      <th>Product_Category2</th>\n","      <th>Product_Category3</th>\n","      <th>Purchase</th>\n","      <th>New</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000001</td>\n","      <td>P00069042</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8370</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000001</td>\n","      <td>P00248474</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>15200</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1000001</td>\n","      <td>P00383922</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1424</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1000001</td>\n","      <td>P00028392</td>\n","      <td>F</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","      <td>1057</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1000002</td>\n","      <td>P02929822</td>\n","      <td>M</td>\n","      <td>55+</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7696</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4ac063f-d804-49ad-87c0-bfc7aafc45f5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a4ac063f-d804-49ad-87c0-bfc7aafc45f5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a4ac063f-d804-49ad-87c0-bfc7aafc45f5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c9c6bccd-9f86-4c66-9d0b-6c9b6300410d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c9c6bccd-9f86-4c66-9d0b-6c9b6300410d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c9c6bccd-9f86-4c66-9d0b-6c9b6300410d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 49,\n  \"fields\": [\n    {\n      \"column\": \"User_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1000001,\n        \"max\": 1000014,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          1000010,\n          1000012,\n          1000001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 49,\n        \"samples\": [\n          \"P00329100\",\n          \"P00987621\",\n          \"P00655546\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"40-50\",\n          \"55+\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Occupation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 7,\n        \"max\": 20,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          11,\n          16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City_Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stay_In_Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"4+\",\n          \"1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_Status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 12,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.46325384900242,\n        \"min\": 2.0,\n        \"max\": 16.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          16.0,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.159591061895123,\n        \"min\": 4.0,\n        \"max\": 17.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          17.0,\n          16.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40658,\n        \"min\": 1057,\n        \"max\": 173834,\n        \"num_unique_values\": 49,\n        \"samples\": [\n          3456,\n          6778\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"New\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["df.tail() # Display the last 5 rows of the Dataset."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"3PWGeXBvdXEO","executionInfo":{"status":"ok","timestamp":1737106133331,"user_tz":-330,"elapsed":539,"user":{"displayName":"anurag kumar","userId":"07772660597975520108"}},"outputId":"cf908738-7f47-4dd1-83d2-2a3f1cebdefd"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    User_ID Product_ID Gender    Age  Occupation City_Category  \\\n","44  1000012  P03809876      M  46-50          13             B   \n","45  1000013  P00987621      F  46-50          13             B   \n","46  1000014  P01569053      F  46-50          13             C   \n","47  1000014  P00655546      F  46-50          13             C   \n","48  1000014  P00023134      F  46-50          13             C   \n","\n","   Stay_In_Country  Marital_Status  Product_Category1  Product_Category2  \\\n","44              4+               0                  2                NaN   \n","45              4+               0                  2                NaN   \n","46              4+               0                  2                5.0   \n","47              4+               0                  4                NaN   \n","48              4+               0                  4                NaN   \n","\n","    Product_Category3  Purchase  New  \n","44                NaN     76544  NaN  \n","45                NaN      6778  NaN  \n","46               14.0      6543  NaN  \n","47               16.0      5432  NaN  \n","48                NaN      1226  NaN  "],"text/html":["\n","  <div id=\"df-f51d2d1b-0cc0-409f-a99d-5c4576edbb6b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User_ID</th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>City_Category</th>\n","      <th>Stay_In_Country</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category1</th>\n","      <th>Product_Category2</th>\n","      <th>Product_Category3</th>\n","      <th>Purchase</th>\n","      <th>New</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>44</th>\n","      <td>1000012</td>\n","      <td>P03809876</td>\n","      <td>M</td>\n","      <td>46-50</td>\n","      <td>13</td>\n","      <td>B</td>\n","      <td>4+</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>76544</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>1000013</td>\n","      <td>P00987621</td>\n","      <td>F</td>\n","      <td>46-50</td>\n","      <td>13</td>\n","      <td>B</td>\n","      <td>4+</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6778</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>1000014</td>\n","      <td>P01569053</td>\n","      <td>F</td>\n","      <td>46-50</td>\n","      <td>13</td>\n","      <td>C</td>\n","      <td>4+</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>14.0</td>\n","      <td>6543</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>1000014</td>\n","      <td>P00655546</td>\n","      <td>F</td>\n","      <td>46-50</td>\n","      <td>13</td>\n","      <td>C</td>\n","      <td>4+</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>NaN</td>\n","      <td>16.0</td>\n","      <td>5432</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>1000014</td>\n","      <td>P00023134</td>\n","      <td>F</td>\n","      <td>46-50</td>\n","      <td>13</td>\n","      <td>C</td>\n","      <td>4+</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1226</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f51d2d1b-0cc0-409f-a99d-5c4576edbb6b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f51d2d1b-0cc0-409f-a99d-5c4576edbb6b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f51d2d1b-0cc0-409f-a99d-5c4576edbb6b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6f3978b0-a328-476d-962f-d3382bdf6678\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6f3978b0-a328-476d-962f-d3382bdf6678')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6f3978b0-a328-476d-962f-d3382bdf6678 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"User_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1000012,\n        \"max\": 1000014,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1000012,\n          1000013,\n          1000014\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"P00987621\",\n          \"P00023134\",\n          \"P01569053\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"46-50\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Occupation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 13,\n        \"max\": 13,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City_Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stay_In_Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"4+\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_Status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 4,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 5.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4142135623730951,\n        \"min\": 14.0,\n        \"max\": 16.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          16.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32075,\n        \"min\": 1226,\n        \"max\": 76544,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          6778\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"New\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["df.info() #Get information about data types, missing values, and memeory usage:"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IFsm0Hb6drIp","executionInfo":{"status":"ok","timestamp":1737104030592,"user_tz":-330,"elapsed":515,"user":{"displayName":"anurag kumar","userId":"07772660597975520108"}},"outputId":"5a70b534-2e3c-4c16-c0e8-12f1fbc6186f"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 49 entries, 0 to 48\n","Data columns (total 13 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   User_ID            49 non-null     int64  \n"," 1   Product_ID         49 non-null     object \n"," 2   Gender             49 non-null     object \n"," 3   Age                49 non-null     object \n"," 4   Occupation         49 non-null     int64  \n"," 5   City_Category      49 non-null     object \n"," 6   Stay_In_Country    49 non-null     object \n"," 7   Marital_Status     49 non-null     int64  \n"," 8   Product_Category1  49 non-null     int64  \n"," 9   Product_Category2  28 non-null     float64\n"," 10  Product_Category3  14 non-null     float64\n"," 11  Purchase           49 non-null     int64  \n"," 12  New                0 non-null      float64\n","dtypes: float64(3), int64(5), object(5)\n","memory usage: 5.1+ KB\n"]}]},{"cell_type":"code","source":["df.describe() #Generate summary statistics for numerical columns:"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"sfkpn7XgeQUn","executionInfo":{"status":"ok","timestamp":1737104135878,"user_tz":-330,"elapsed":601,"user":{"displayName":"anurag kumar","userId":"07772660597975520108"}},"outputId":"725a2fee-e852-4c7c-f893-47aedd99cc2b"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            User_ID  Occupation  Marital_Status  Product_Category1  \\\n","count  4.900000e+01   49.000000       49.000000          49.000000   \n","mean   1.000008e+06   12.448980        0.428571           4.530612   \n","std    3.613326e+00    3.304424        0.500000           2.944642   \n","min    1.000001e+06    7.000000        0.000000           1.000000   \n","25%    1.000005e+06   10.000000        0.000000           2.000000   \n","50%    1.000008e+06   12.000000        0.000000           5.000000   \n","75%    1.000011e+06   15.000000        1.000000           6.000000   \n","max    1.000014e+06   20.000000        1.000000          12.000000   \n","\n","       Product_Category2  Product_Category3       Purchase  New  \n","count          28.000000          14.000000      49.000000  0.0  \n","mean            9.071429          12.928571   25892.387755  NaN  \n","std             4.463254           4.159591   40658.945229  NaN  \n","min             2.000000           4.000000    1057.000000  NaN  \n","25%             5.000000          13.250000    3445.000000  NaN  \n","50%             8.000000          14.000000    7655.000000  NaN  \n","75%            14.000000          15.750000   21111.000000  NaN  \n","max            16.000000          17.000000  173834.000000  NaN  "],"text/html":["\n","  <div id=\"df-8bf064da-1107-44dd-92ef-b411cb22d433\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User_ID</th>\n","      <th>Occupation</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category1</th>\n","      <th>Product_Category2</th>\n","      <th>Product_Category3</th>\n","      <th>Purchase</th>\n","      <th>New</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4.900000e+01</td>\n","      <td>49.000000</td>\n","      <td>49.000000</td>\n","      <td>49.000000</td>\n","      <td>28.000000</td>\n","      <td>14.000000</td>\n","      <td>49.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.000008e+06</td>\n","      <td>12.448980</td>\n","      <td>0.428571</td>\n","      <td>4.530612</td>\n","      <td>9.071429</td>\n","      <td>12.928571</td>\n","      <td>25892.387755</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3.613326e+00</td>\n","      <td>3.304424</td>\n","      <td>0.500000</td>\n","      <td>2.944642</td>\n","      <td>4.463254</td>\n","      <td>4.159591</td>\n","      <td>40658.945229</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000001e+06</td>\n","      <td>7.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>4.000000</td>\n","      <td>1057.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.000005e+06</td>\n","      <td>10.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>5.000000</td>\n","      <td>13.250000</td>\n","      <td>3445.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.000008e+06</td>\n","      <td>12.000000</td>\n","      <td>0.000000</td>\n","      <td>5.000000</td>\n","      <td>8.000000</td>\n","      <td>14.000000</td>\n","      <td>7655.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000011e+06</td>\n","      <td>15.000000</td>\n","      <td>1.000000</td>\n","      <td>6.000000</td>\n","      <td>14.000000</td>\n","      <td>15.750000</td>\n","      <td>21111.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000014e+06</td>\n","      <td>20.000000</td>\n","      <td>1.000000</td>\n","      <td>12.000000</td>\n","      <td>16.000000</td>\n","      <td>17.000000</td>\n","      <td>173834.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8bf064da-1107-44dd-92ef-b411cb22d433')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8bf064da-1107-44dd-92ef-b411cb22d433 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8bf064da-1107-44dd-92ef-b411cb22d433');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-450c25f2-6a24-4157-b9d9-239ddae35559\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-450c25f2-6a24-4157-b9d9-239ddae35559')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-450c25f2-6a24-4157-b9d9-239ddae35559 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"User_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 462901.4859749955,\n        \"min\": 3.613325677126209,\n        \"max\": 1000014.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1000007.8367346938,\n          1000008.0,\n          49.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Occupation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.206218180236517,\n        \"min\": 3.3044239569212115,\n        \"max\": 49.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          12.448979591836734,\n          12.0,\n          49.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_Status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.18122566367494,\n        \"min\": 0.0,\n        \"max\": 49.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.42857142857142855,\n          1.0,\n          0.5000000000000002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.990740239395521,\n        \"min\": 1.0,\n        \"max\": 49.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4.530612244897959,\n          5.0,\n          49.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.410707831148166,\n        \"min\": 2.0,\n        \"max\": 28.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          9.071428571428571,\n          8.0,\n          28.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.997932804944747,\n        \"min\": 4.0,\n        \"max\": 17.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          14.0,\n          12.928571428571429,\n          15.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 58180.710184097574,\n        \"min\": 49.0,\n        \"max\": 173834.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          25892.38775510204,\n          7655.0,\n          49.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"New\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.shape #Get the number of rows and columns in the dataset:"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"joOLR8J8ee2I","executionInfo":{"status":"ok","timestamp":1737104199467,"user_tz":-330,"elapsed":458,"user":{"displayName":"anurag kumar","userId":"07772660597975520108"}},"outputId":"c2c6ef44-ec86-46f9-ad7d-f9429293b3d3"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(49, 13)"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df.drop(['New'], axis=1,inplace=True) #Drop the coloumn."],"metadata":{"id":"Mgu0CIynesJ_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["axis=1:\n","\n","When axis is set to 1, it indicates that the operation should be performed along the columns\n","\n","axis = 0\n","\n","When axis is set to 0, it indicate that the operation should be performed along the rows of the DataFrame or series."],"metadata":{"id":"XVONQALAfo8O"}},{"cell_type":"code","source":["# Handling categorical features Gender\n","df['Gender'] = df['Gender'].map({'F': 0, 'M': 1}) #used dictionaries"],"metadata":{"id":"FkUA--CHhG7w","executionInfo":{"status":"ok","timestamp":1737106145399,"user_tz":-330,"elapsed":488,"user":{"displayName":"anurag kumar","userId":"07772660597975520108"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"eoTDVdYsl3Dj","executionInfo":{"status":"ok","timestamp":1737106152986,"user_tz":-330,"elapsed":567,"user":{"displayName":"anurag kumar","userId":"07772660597975520108"}},"outputId":"55224f47-2498-440d-fdfd-a2f8ee4708fa"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   User_ID Product_ID  Gender   Age  Occupation City_Category Stay_In_Country  \\\n","0  1000001  P00069042       0  0-17          10             A               2   \n","1  1000001  P00248474       0  0-17          10             A               2   \n","2  1000001  P00383922       0  0-17          10             A               2   \n","3  1000001  P00028392       0  0-17          10             A               2   \n","4  1000002  P02929822       1   55+          10             A               2   \n","\n","   Marital_Status  Product_Category1  Product_Category2  Product_Category3  \\\n","0               0                  3                NaN                NaN   \n","1               0                  1                6.0               14.0   \n","2               0                 12                NaN                NaN   \n","3               0                 12               14.0                NaN   \n","4               0                  8                NaN                NaN   \n","\n","   Purchase  New  \n","0      8370  NaN  \n","1     15200  NaN  \n","2      1424  NaN  \n","3      1057  NaN  \n","4      7696  NaN  "],"text/html":["\n","  <div id=\"df-3fd820d1-ef0b-45f6-b091-dfc3562e6dae\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User_ID</th>\n","      <th>Product_ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Occupation</th>\n","      <th>City_Category</th>\n","      <th>Stay_In_Country</th>\n","      <th>Marital_Status</th>\n","      <th>Product_Category1</th>\n","      <th>Product_Category2</th>\n","      <th>Product_Category3</th>\n","      <th>Purchase</th>\n","      <th>New</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000001</td>\n","      <td>P00069042</td>\n","      <td>0</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8370</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000001</td>\n","      <td>P00248474</td>\n","      <td>0</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>15200</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1000001</td>\n","      <td>P00383922</td>\n","      <td>0</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1424</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1000001</td>\n","      <td>P00028392</td>\n","      <td>0</td>\n","      <td>0-17</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","      <td>1057</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1000002</td>\n","      <td>P02929822</td>\n","      <td>1</td>\n","      <td>55+</td>\n","      <td>10</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7696</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3fd820d1-ef0b-45f6-b091-dfc3562e6dae')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3fd820d1-ef0b-45f6-b091-dfc3562e6dae button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3fd820d1-ef0b-45f6-b091-dfc3562e6dae');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1e3c8bbb-2e00-478f-b259-c42988935d6b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1e3c8bbb-2e00-478f-b259-c42988935d6b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1e3c8bbb-2e00-478f-b259-c42988935d6b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 49,\n  \"fields\": [\n    {\n      \"column\": \"User_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1000001,\n        \"max\": 1000014,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          1000010,\n          1000012,\n          1000001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 49,\n        \"samples\": [\n          \"P00329100\",\n          \"P00987621\",\n          \"P00655546\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"40-50\",\n          \"55+\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Occupation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 7,\n        \"max\": 20,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          11,\n          16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City_Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stay_In_Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"4+\",\n          \"1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_Status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 12,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.46325384900242,\n        \"min\": 2.0,\n        \"max\": 16.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          16.0,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.159591061895123,\n        \"min\": 4.0,\n        \"max\": 17.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          17.0,\n          16.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40658,\n        \"min\": 1057,\n        \"max\": 173834,\n        \"num_unique_values\": 49,\n        \"samples\": [\n          3456,\n          6778\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"New\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["df['Age'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D7BqpDPFmRhV","executionInfo":{"status":"ok","timestamp":1737106231115,"user_tz":-330,"elapsed":580,"user":{"displayName":"anurag kumar","userId":"07772660597975520108"}},"outputId":"bb764489-9070-465c-8604-087b2ed0f8fc"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['0-17', '55+', '26-35', '46-50', '51-55', '36-45', '20-30',\n","       '40-50', '35-45'], dtype=object)"]},"metadata":{},"execution_count":43}]}]}